@model PodcastWebApp.Models.ViewModels.PodcasterDashboardViewModel
@{
    ViewData["Title"] = "Podcaster Dashboard";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h1 class="h3">
        <i class="bi bi-mic-fill text-primary me-2"></i>
        Podcaster Dashboard
    </h1>
    <div>
        <a href="@Url.Action("Create", "Podcasts")" class="btn btn-primary me-2">
            <i class="bi bi-plus-circle me-1"></i>New Podcast
        </a>
        <a href="@Url.Action("Create", "Episodes")" class="btn btn-outline-primary">
            <i class="bi bi-upload me-1"></i>Upload Episode
        </a>
    </div>
</div>

<!-- Stats Cards -->
<div class="row g-4 mb-4">
    <div class="col-md-3">
        <div class="card bg-primary text-white">
            <div class="card-body">
                <div class="d-flex justify-content-between">
                    <div>
                        <h6 class="card-title">Total Views</h6>
                        <h3 class="mb-0">@Model.TotalViews.ToString("N0")</h3>
                    </div>
                    <i class="bi bi-eye-fill fs-1 opacity-75"></i>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card bg-success text-white">
            <div class="card-body">
                <div class="d-flex justify-content-between">
                    <div>
                        <h6 class="card-title">Subscribers</h6>
                        <h3 class="mb-0">@Model.TotalSubscribers.ToString("N0")</h3>
                    </div>
                    <i class="bi bi-people-fill fs-1 opacity-75"></i>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card bg-info text-white">
            <div class="card-body">
                <div class="d-flex justify-content-between">
                    <div>
                        <h6 class="card-title">Episodes</h6>
                        <h3 class="mb-0">@Model.TotalEpisodes</h3>
                    </div>
                    <i class="bi bi-collection-play-fill fs-1 opacity-75"></i>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card bg-warning text-white">
            <div class="card-body">
                <div class="d-flex justify-content-between">
                    <div>
                        <h6 class="card-title">Comments</h6>
                        <h3 class="mb-0">@Model.TotalComments</h3>
                    </div>
                    <i class="bi bi-chat-dots-fill fs-1 opacity-75"></i>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <!-- My Podcasts -->
    <div class="col-lg-8">
        <div class="card">
            <div class="card-header d-flex justify-content-between align-items-center">
                <h5 class="mb-0">My Podcasts</h5>
                <a href="@Url.Action("Index", "Podcasts")" class="btn btn-sm btn-outline-primary">View All</a>
            </div>
            <div class="card-body">
                @if (Model.Podcasts.Any())
                {
                    <div class="table-responsive">
                        <table class="table table-hover">
                            <thead>
                                <tr>
                                    <th>Podcast</th>
                                    <th>Episodes</th>
                                    <th>Total Views</th>
                                    <th>Created</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var podcast in Model.Podcasts)
                                {
                                    <tr>
                                        <td>
                                            <div class="d-flex align-items-center">
                                                <i class="bi bi-mic-fill text-primary me-2"></i>
                                                <div>
                                                    <div class="fw-medium">@podcast.Title</div>
                                                    <small class="text-muted">@podcast.Category</small>
                                                </div>
                                            </div>
                                        </td>
                                        <td>@podcast.Episodes.Count</td>
                                        <td>@podcast.Episodes.Sum(e => e.Views).ToString("N0")</td>
                                        <td>
                                            <small class="text-muted">@podcast.CreatedDate.ToString("MMM dd, yyyy")</small>
                                        </td>
                                        <td>
                                            <a href="@Url.Action("Details", "Podcasts", new { id = podcast.PodcastID })" class="btn btn-sm btn-outline-primary me-1">
                                                <i class="bi bi-eye"></i>
                                            </a>
                                            <a href="@Url.Action("Create", "Episodes")" class="btn btn-sm btn-outline-success">
                                                <i class="bi bi-upload"></i>
                                            </a>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                }
                else
                {
                    <div class="text-center py-5">
                        <i class="bi bi-mic-fill text-muted mb-3" style="font-size: 3rem;"></i>
                        <h6 class="text-muted">No podcasts yet</h6>
                        <p class="text-muted mb-3">Create your first podcast to get started!</p>
                        <a href="@Url.Action("Create", "Podcasts")" class="btn btn-primary">
                            <i class="bi bi-plus-circle me-1"></i>Create Podcast
                        </a>
                    </div>
                }
            </div>
        </div>

        <!-- Recent Episodes -->
        @if (Model.Podcasts.Any())
        {
            var recentEpisodes = Model.Podcasts
                .SelectMany(p => p.Episodes)
                .OrderByDescending(e => e.ReleaseDate)
                .Take(5)
                .ToList();
            
            @if (recentEpisodes.Any())
            {
                <div class="card mt-4">
                    <div class="card-header">
                        <h5 class="mb-0">Recent Episodes</h5>
                    </div>
                    <div class="card-body">
                        <div class="list-group list-group-flush">
                            @foreach (var episode in recentEpisodes)
                            {
                                <div class="list-group-item px-0">
                                    <div class="d-flex justify-content-between align-items-center">
                                        <div>
                                            <h6 class="mb-1">@episode.Title</h6>
                                            <small class="text-muted">
                                                @episode.ReleaseDate.ToString("MMM dd, yyyy") • 
                                                @episode.Views views
                                            </small>
                                        </div>
                                        <a href="@Url.Action("Details", "Episodes", new { id = episode.EpisodeID })" class="btn btn-sm btn-outline-primary">
                                            View
                                        </a>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            }
        }
    </div>

    <!-- Recent Activity & Quick Actions -->
    <div class="col-lg-4">
        <div class="card mb-4">
            <div class="card-header">
                <h5 class="mb-0">Quick Actions</h5>
            </div>
            <div class="card-body">
                <div class="d-grid gap-2">
                    <a href="@Url.Action("Create", "Podcasts")" class="btn btn-primary">
                        <i class="bi bi-plus-circle me-1"></i>New Podcast
                    </a>
                    <a href="@Url.Action("Create", "Episodes")" class="btn btn-outline-primary">
                        <i class="bi bi-upload me-1"></i>Upload Episode
                    </a>
                    <a href="@Url.Action("Index", "Podcasts")" class="btn btn-outline-secondary">
                        <i class="bi bi-collection me-1"></i>Manage Podcasts
                    </a>
                </div>
            </div>
        </div>

        <div class="card">
            <div class="card-header">
                <h5 class="mb-0">Recent Activity</h5>
            </div>
            <div class="card-body">
                @if (Model.Podcasts.Any())
                {
                    var latestEpisode = Model.Podcasts
                        .SelectMany(p => p.Episodes)
                        .OrderByDescending(e => e.ReleaseDate)
                        .FirstOrDefault();
                    
                    @if (latestEpisode != null)
                    {
                        <div class="d-flex align-items-center mb-3">
                            <i class="bi bi-upload text-success me-2"></i>
                            <div class="flex-grow-1">
                                <small class="d-block">New episode uploaded</small>
                                <small class="text-muted">@GetRelativeTime(latestEpisode.ReleaseDate)</small>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <p class="text-muted text-center mb-0">No recent activity</p>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Auto-refresh dashboard every 30 seconds
        setTimeout(function() {
            location.reload();
        }, 30000);
    </script>
}

@functions {
    string GetRelativeTime(DateTime date)
    {
        var timeSpan = DateTime.UtcNow - date;
        
        if (timeSpan.TotalMinutes < 1) return "just now";
        if (timeSpan.TotalMinutes < 60) return $"{(int)timeSpan.TotalMinutes} minutes ago";
        if (timeSpan.TotalHours < 24) return $"{(int)timeSpan.TotalHours} hours ago";
        if (timeSpan.TotalDays < 7) return $"{(int)timeSpan.TotalDays} days ago";
        
        return date.ToString("MMM dd, yyyy");
    }
}